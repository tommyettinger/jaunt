//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.17 at 09:13:55 PM EDT 
//


package org.javolution.xml.jaxb.common.test.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="testAnyElement" type="{http://javolution.org/xml/schema/javolution-common}testAnyElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testBinaryElement" type="{http://javolution.org/xml/schema/javolution-common}testBinaryElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testCommonElement" type="{http://javolution.org/xml/schema/javolution-common}testCommonElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testChoiceElement" type="{http://javolution.org/xml/schema/javolution-common}testChoiceElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testDateFormatElement" type="{http://javolution.org/xml/schema/javolution-common}testDateFormatElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testNamespaceElement" type="{http://javolution.org/xml/schema/javolution-common}testNamespaceElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testUnsignedElement" type="{http://javolution.org/xml/schema/javolution-common}testUnsignedElement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="testValueElement" type="{http://javolution.org/xml/schema/javolution-common}testValueElement" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="type" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "testAnyElement",
    "testBinaryElement",
    "testCommonElement",
    "testChoiceElement",
    "testDateFormatElement",
    "testNamespaceElement",
    "testUnsignedElement",
    "testValueElement"
})
@XmlRootElement(name = "testCommonRoot")
public class TestCommonRoot {

    protected List<TestAnyElement> testAnyElement;
    protected List<TestBinaryElement> testBinaryElement;
    protected List<TestCommonElement> testCommonElement;
    protected List<TestChoiceElement> testChoiceElement;
    protected List<TestDateFormatElement> testDateFormatElement;
    protected List<TestNamespaceElement> testNamespaceElement;
    protected List<TestUnsignedElement> testUnsignedElement;
    protected List<TestValueElement> testValueElement;
    @XmlAttribute(name = "type")
    protected String type;

    /**
     * Gets the value of the testAnyElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testAnyElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestAnyElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestAnyElement }
     * 
     * 
     */
    public List<TestAnyElement> getTestAnyElement() {
        if (testAnyElement == null) {
            testAnyElement = new ArrayList<TestAnyElement>();
        }
        return this.testAnyElement;
    }

    /**
     * Gets the value of the testBinaryElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testBinaryElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestBinaryElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestBinaryElement }
     * 
     * 
     */
    public List<TestBinaryElement> getTestBinaryElement() {
        if (testBinaryElement == null) {
            testBinaryElement = new ArrayList<TestBinaryElement>();
        }
        return this.testBinaryElement;
    }

    /**
     * Gets the value of the testCommonElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testCommonElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestCommonElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestCommonElement }
     * 
     * 
     */
    public List<TestCommonElement> getTestCommonElement() {
        if (testCommonElement == null) {
            testCommonElement = new ArrayList<TestCommonElement>();
        }
        return this.testCommonElement;
    }

    /**
     * Gets the value of the testChoiceElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testChoiceElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestChoiceElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestChoiceElement }
     * 
     * 
     */
    public List<TestChoiceElement> getTestChoiceElement() {
        if (testChoiceElement == null) {
            testChoiceElement = new ArrayList<TestChoiceElement>();
        }
        return this.testChoiceElement;
    }

    /**
     * Gets the value of the testDateFormatElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testDateFormatElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestDateFormatElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestDateFormatElement }
     * 
     * 
     */
    public List<TestDateFormatElement> getTestDateFormatElement() {
        if (testDateFormatElement == null) {
            testDateFormatElement = new ArrayList<TestDateFormatElement>();
        }
        return this.testDateFormatElement;
    }

    /**
     * Gets the value of the testNamespaceElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testNamespaceElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestNamespaceElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestNamespaceElement }
     * 
     * 
     */
    public List<TestNamespaceElement> getTestNamespaceElement() {
        if (testNamespaceElement == null) {
            testNamespaceElement = new ArrayList<TestNamespaceElement>();
        }
        return this.testNamespaceElement;
    }

    /**
     * Gets the value of the testUnsignedElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testUnsignedElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestUnsignedElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestUnsignedElement }
     * 
     * 
     */
    public List<TestUnsignedElement> getTestUnsignedElement() {
        if (testUnsignedElement == null) {
            testUnsignedElement = new ArrayList<TestUnsignedElement>();
        }
        return this.testUnsignedElement;
    }

    /**
     * Gets the value of the testValueElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the testValueElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTestValueElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TestValueElement }
     * 
     * 
     */
    public List<TestValueElement> getTestValueElement() {
        if (testValueElement == null) {
            testValueElement = new ArrayList<TestValueElement>();
        }
        return this.testValueElement;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

}
